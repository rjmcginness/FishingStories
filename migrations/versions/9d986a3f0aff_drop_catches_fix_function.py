"""drop catches fix function

Revision ID: 9d986a3f0aff
Revises: 9853fd4d03a7
Create Date: 2022-06-24 17:58:24.189526

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9d986a3f0aff'
down_revision = '9853fd4d03a7'
branch_labels = None
depends_on = None

curr_min_distance = '''
CREATE OR REPLACE FUNCTION curr_min_distance(lat NUMERIC, lon NUMERIC) RETURNS INTEGER AS
$$
DECLARE url_id INTEGER;
BEGIN
	WITH distances AS (
	SELECT u.id as u_id, 3963 * ACOS(SIN(gp.latitude) * SIN($1) + COS(gp.latitude) * COS($1) * COS($2 - gp.longitude)) AS dist FROM data_urls u
	INNER JOIN global_positions gp
	ON u.global_position_id = gp.id WHERE u.data_type = 'current'
	) SELECT u_id FROM distances WHERE dist = (SELECT MIN(dist) FROM distances) INTO url_id;
	RETURN url_id;
END;
$$
LANGUAGE PLPGSQL;
                    '''



def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('catches')
    op.add_column('fishes', sa.Column('date_time_caught', sa.DateTime(), nullable=False))
    op.add_column('fishes', sa.Column('angler_id', sa.Integer(), nullable=False))
    op.add_column('fishes', sa.Column('fishing_spot_id', sa.Integer(), nullable=False))
    op.add_column('fishes', sa.Column('bait_id', sa.Integer(), nullable=False))
    op.add_column('fishes', sa.Column('gear_id', sa.Integer(), nullable=True))
    op.create_foreign_key('fishes_angler_id_fkey', 'fishes', 'anglers', ['angler_id'], ['id'])
    op.create_foreign_key('fishes_gear_id_fkey', 'fishes', 'fishing_gear', ['gear_id'], ['id'])
    op.create_foreign_key('fishes_fishing_spot_id_fkey', 'fishes', 'fishing_spots', ['fishing_spot_id'], ['id'])
    op.create_foreign_key('fishes_bait_id_fkey', 'fishes', 'baits', ['bait_id'], ['id'])
    
    # ADDED MANUALLY 6/24/2022
    op.execute(curr_min_distance)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('fishes_bait_id_fkey', 'fishes', type_='foreignkey')
    op.drop_constraint('fishes_fishing_spot_id_fkey', 'fishes', type_='foreignkey')
    op.drop_constraint('fishes_gear_id_fkey', 'fishes', type_='foreignkey')
    op.drop_constraint('fishes_angler_id_fkey', 'fishes', type_='foreignkey')
    op.drop_column('fishes', 'gear_id')
    op.drop_column('fishes', 'bait_id')
    op.drop_column('fishes', 'fishing_spot_id')
    op.drop_column('fishes', 'angler_id')
    op.drop_column('fishes', 'date_time_caught')
    op.create_table('catches',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date_time_caught', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('fish_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('angler_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('fishing_spot_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('bait_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('gear_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['angler_id'], ['anglers.id'], name='catches_angler_id_fkey'),
    sa.ForeignKeyConstraint(['bait_id'], ['baits.id'], name='catches_bait_id_fkey'),
    sa.ForeignKeyConstraint(['fish_id'], ['fishes.id'], name='catches_fish_id_fkey'),
    sa.ForeignKeyConstraint(['fishing_spot_id'], ['fishing_spots.id'], name='catches_fishing_spot_id_fkey'),
    sa.ForeignKeyConstraint(['gear_id'], ['fishing_gear.id'], name='catches_gear_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='catches_pkey')
    )
    
    # ADDED MANUALLY 6/24/2022
    op.execute('DROP FUNCTION curr_min_distance')
    # ### end Alembic commands ###
