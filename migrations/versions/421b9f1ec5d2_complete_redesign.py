"""complete redesign

Revision ID: 421b9f1ec5d2
Revises: 0e28d710807a
Create Date: 2022-06-23 20:15:45.302117

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '421b9f1ec5d2'
down_revision = '0e28d710807a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('angler_baits',
    sa.Column('angler_id', sa.Integer(), nullable=False),
    sa.Column('bait_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['angler_id'], ['anglers.id'], ),
    sa.ForeignKeyConstraint(['bait_id'], ['baits.id'], ),
    sa.PrimaryKeyConstraint('angler_id', 'bait_id')
    )
    op.create_table('angler_fishing_spots',
    sa.Column('angler_id', sa.Integer(), nullable=False),
    sa.Column('fishing_spot_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['angler_id'], ['anglers.id'], ),
    sa.ForeignKeyConstraint(['fishing_spot_id'], ['fishing_spots.id'], ),
    sa.PrimaryKeyConstraint('angler_id', 'fishing_spot_id')
    )
    op.create_table('angler_gear',
    sa.Column('angler_id', sa.Integer(), nullable=False),
    sa.Column('fishing_gear_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['angler_id'], ['anglers.id'], ),
    sa.ForeignKeyConstraint(['fishing_gear_id'], ['fishing_gear.id'], ),
    sa.PrimaryKeyConstraint('angler_id', 'fishing_gear_id')
    )
    op.create_table('catches',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('date_time_caught', sa.DateTime(), nullable=False),
    sa.Column('fish_id', sa.Integer(), nullable=False),
    sa.Column('angler_id', sa.Integer(), nullable=False),
    sa.Column('fishing_spot_id', sa.Integer(), nullable=False),
    sa.Column('bait_id', sa.Integer(), nullable=False),
    sa.Column('gear_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['angler_id'], ['anglers.id'], ),
    sa.ForeignKeyConstraint(['bait_id'], ['baits.id'], ),
    sa.ForeignKeyConstraint(['fish_id'], ['fishes.id'], ),
    sa.ForeignKeyConstraint(['fishing_spot_id'], ['fishing_spots.id'], ),
    sa.ForeignKeyConstraint(['gear_id'], ['fishing_gear.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('angler_outings',
    sa.Column('angler_id', sa.Integer(), nullable=False),
    sa.Column('fishing_outing_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['angler_id'], ['anglers.id'], ),
    sa.ForeignKeyConstraint(['fishing_outing_id'], ['fishing_outings.id'], ),
    sa.PrimaryKeyConstraint('angler_id', 'fishing_outing_id')
    )
    op.drop_table('spot_related_positions')
    op.drop_table('outings_fished')
    op.drop_table('fish_caught')
    op.drop_table('angler_spots')
    op.drop_table('fished_spots')
    op.drop_column('data_urls', 'data_type')
    op.drop_constraint('fishes_fishing_spot_id_fkey', 'fishes', type_='foreignkey')
    op.drop_constraint('fishes_bait_id_fkey', 'fishes', type_='foreignkey')
    op.drop_constraint('fishes_fishing_gear_id_fkey', 'fishes', type_='foreignkey')
    op.drop_column('fishes', 'bait_id')
    op.drop_column('fishes', 'datetime_caught')
    op.drop_column('fishes', 'fishing_spot_id')
    op.drop_column('fishes', 'fishing_gear_id')
    op.drop_constraint('fishing_conditions_fishing_spot_id_fkey', 'fishing_conditions', type_='foreignkey')
    op.drop_column('fishing_conditions', 'fishing_spot_id')
    op.add_column('fishing_outings', sa.Column('name', sa.String(length=280), nullable=False))
    op.add_column('fishing_outings', sa.Column('outing_date', sa.Date(), nullable=False))
    op.add_column('fishing_outings', sa.Column('fishing_spot_id', sa.Integer(), nullable=False))
    op.add_column('fishing_outings', sa.Column('fishing_conditions_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'fishing_outings', 'fishing_conditions', ['fishing_conditions_id'], ['id'])
    op.create_foreign_key(None, 'fishing_outings', 'fishing_spots', ['fishing_spot_id'], ['id'])
    op.drop_column('fishing_outings', 'date')
    op.drop_column('fishing_outings', 'water')
    op.drop_column('fishing_outings', 'description')
    op.drop_column('fishing_outings', 'trip_type')
    op.add_column('user_accounts', sa.Column('email', sa.String(length=280), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user_accounts', 'email')
    op.add_column('fishing_outings', sa.Column('trip_type', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('fishing_outings', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('fishing_outings', sa.Column('water', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('fishing_outings', sa.Column('date', sa.DATE(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'fishing_outings', type_='foreignkey')
    op.drop_constraint(None, 'fishing_outings', type_='foreignkey')
    op.drop_column('fishing_outings', 'fishing_conditions_id')
    op.drop_column('fishing_outings', 'fishing_spot_id')
    op.drop_column('fishing_outings', 'outing_date')
    op.drop_column('fishing_outings', 'name')
    op.add_column('fishing_conditions', sa.Column('fishing_spot_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('fishing_conditions_fishing_spot_id_fkey', 'fishing_conditions', 'fishing_spots', ['fishing_spot_id'], ['id'], ondelete='CASCADE')
    op.add_column('fishes', sa.Column('fishing_gear_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('fishes', sa.Column('fishing_spot_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('fishes', sa.Column('datetime_caught', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('fishes', sa.Column('bait_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('fishes_fishing_gear_id_fkey', 'fishes', 'fishing_gear', ['fishing_gear_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key('fishes_bait_id_fkey', 'fishes', 'baits', ['bait_id'], ['id'])
    op.create_foreign_key('fishes_fishing_spot_id_fkey', 'fishes', 'fishing_spots', ['fishing_spot_id'], ['id'])
    op.add_column('data_urls', sa.Column('data_type', sa.VARCHAR(length=8), autoincrement=False, nullable=False))
    op.create_table('fished_spots',
    sa.Column('fishing_outing_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('fishing_spot_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['fishing_outing_id'], ['fishing_outings.id'], name='fished_spots_fishing_outing_id_fkey'),
    sa.ForeignKeyConstraint(['fishing_spot_id'], ['fishing_spots.id'], name='fished_spots_fishing_spot_id_fkey'),
    sa.PrimaryKeyConstraint('fishing_outing_id', 'fishing_spot_id', name='fished_spots_pkey')
    )
    op.create_table('angler_spots',
    sa.Column('angler_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('fishing_spot_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('nickname', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['angler_id'], ['anglers.id'], name='angler_spots_angler_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['fishing_spot_id'], ['fishing_spots.id'], name='angler_spots_fishing_spot_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('angler_id', 'fishing_spot_id', name='angler_spots_pkey')
    )
    op.create_table('fish_caught',
    sa.Column('anglers_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('fishes_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['anglers_id'], ['anglers.id'], name='fish_caught_anglers_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['fishes_id'], ['fishes.id'], name='fish_caught_fishes_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('anglers_id', 'fishes_id', name='fish_caught_pkey')
    )
    op.create_table('outings_fished',
    sa.Column('fishing_outing_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('angler_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['angler_id'], ['anglers.id'], name='outings_fished_angler_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['fishing_outing_id'], ['fishing_outings.id'], name='outings_fished_fishing_outing_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('fishing_outing_id', 'angler_id', name='outings_fished_pkey')
    )
    op.create_table('spot_related_positions',
    sa.Column('fishing_spot_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('global_position_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['fishing_spot_id'], ['fishing_spots.id'], name='spot_related_positions_fishing_spot_id_fkey'),
    sa.ForeignKeyConstraint(['global_position_id'], ['global_positions.id'], name='spot_related_positions_global_position_id_fkey'),
    sa.PrimaryKeyConstraint('fishing_spot_id', 'global_position_id', name='spot_related_positions_pkey')
    )
    op.drop_table('angler_outings')
    op.drop_table('catches')
    op.drop_table('angler_gear')
    op.drop_table('angler_fishing_spots')
    op.drop_table('angler_baits')
    # ### end Alembic commands ###
